airmonitor = {}
airmonitor.name = "airmon"
airmonitor.args = "[START/STOP] [NETDEVICE]"
airmonitor.desc = "Puts network card into monitor mode."
airmonitor.full_desc = "This command will put a network card into monitor mode,\n where [START/STOP] is whether to start or stop monitor mode,\n where [NETDEVICE] is the network card,\n provide no arguments to list available network cards."
airmonitor.handler_types = ["start", "shell", "computer", "file"]
airmonitor.run = function(object, args)

    if typeof(object) == "shell" then object = object.host_computer
    //command: airmon
    if not args then
        print(char(10)+object.network_devices())
        return
    end if
    if not args or args.len < 2 then; self.show_help; return; end if
    if not main_session.cryptoLib then; print("Error: Missing crypto library"); return; end if

    formatOutput = "Interface Chipset Monitor_Mode\n"
    if args.len == 0 then; print(format_columns(formatOutput + object.network_devices)); return; end if
    option = args[0]
    device = args[1]
    if option != "start" and option != "stop" then; self.show_help; return; end if

    output = main_session.cryptoLib.airmon(option, device)
    if not output then; print("airmon: " + device + " not found"); return; end if
    if typeof(output) == "string" then; print(output); return; end if
    print(format_columns(formatOutput + object.network_devices))

end function

airmonitor.show_help = function()
    show_help(self.name, self.args, self.full_desc, self.handler_types)
end function