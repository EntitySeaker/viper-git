aptget = {}
aptget.name = "apt-get"
aptget.args = "[N/A]"
aptget.desc = "Apt client."
aptget.full_desc = "This command will start the apt-get client."
aptget.handler_types = ["start", "shell", "computer", "file"]
aptget.run = function(object, args)

    //command: apt-get
    if not main_session.aptclientLib then
        print("aptclient.so not found!")
        return
    end if

    PendingUpdating = function(folderPath)
        pendingUpdate = []
        targetFolder = object.host_computer.File(folderPath)
        if targetFolder != null then
            files = targetFolder.get_files
            for itemFile in files
                output = main_session.aptclientLib.check_upgrade(itemFile.path)
                if output == true then
                    pendingUpdate.push(itemFile.name)
                end if
            end for
        end if
        return pendingUpdate
    end function 

    if not args or args.len == 0 or args.len > 3 then; print(command_info("apt-get_usage")); return; end if
    action = args[0]
    if action == "update" then
        print("Updating package lists...")
        output = main_session.aptclientLib.update
        if output then print(output)
        
    else if action == "install" then
        print("Reading package lists...")
        if args.len != 2 then; print(command_info("apt-get_usage")); return; end if
        print("Downloading " + args[1])
        output = main_session.aptclientLib.install(args[1])
        if output == true then; print(args[1] + " installed"); return; end if
        print(output)
        
    else if action == "search" then
        if args.len != 2 then; print(command_info("apt-get_usage")); return; end if
        print(main_session.aptclientLib.search(args[1]))
        
    else if action == "show" then
        if args.len != 2 then; print(command_info("apt-get_usage")); return; end if
        print(main_session.aptclientLib.show(args[1]))
        
    else if action == "addrepo" then
        if args.len < 2 or args.len > 3 then; print(command_info("apt-get_usage")); return; end if
        port = 1542
        if args.len == 3 then port = args[2]
        output = main_session.aptclientLib.add_repo(args[1])
        if output then; print(output); return; end if
        print("Repository " + args[1] + " added succesfully.\nLaunch apt with the update option to apply the changes")
        
    else if action == "delrepo" then
        if args.len != 2 then; print(command_info("apt-get_usage")); return; end if
        output = main_session.aptclientLib.del_repo(args[1])
        if output then; print(output); return; end if
        print("Repository " + args[1] + " removed succesfully.\nLaunch apt with the update option to apply the changes")
        
    else if action == "upgrade" then
        print("Reading package lists...")
        //upgrade all packages
        if args.len == 1 then
            pendingPackages = PendingUpdating("/lib") + PendingUpdating("/bin")
            if pendingPackages.len == 0 then; print("No updates needed"); return; end if
            print("The following packages will be updated:")
            pkgs = ""
            for itemPackage in pendingPackages
                pkgs = pkgs + " " + itemPackage
            end for
            print(pkgs)
            option = user_input("\nDo you want to continue?(y/n): ")
            if option == "y" or option == "yes" then
                counter = 0
                for itemPackage in pendingPackages
                    output = main_session.aptclientLib.install(itemPackage)
                    if output == true then
                        counter = counter + 1
                    else if output then
                        print(output)
                    end if
                end for
                print(counter + " packages updated")
            else 
                print("aborted")
                return
            end if
        
        //upgrade specific package
        else if args.len == 2 then
            output = main_session.aptclientLib.check_upgrade(args[1])
            if not output then; print("No updates needed"); return; end if
            if output == true then
                print("The following package will be updated:\nargs[1]")
                option = user_input("\nDo you want to continue?(y/n): ")
                if option == "y" or option == "yes" then
                    output = main_session.aptclientLib.install(args[1])
                    if output == true then; print(args[1] + " installed."); return; end if
                    print(output)				
                else 
                    print("aborted")
                    return
                end if
            else 
                print(output)
            end if
        end if
        
    else 
        print(command_info("apt-get_usage"))
    end if

end function

aptget.show_help = function()
    show_help(self.name, self.args, self.full_desc, self.handler_types)
end function