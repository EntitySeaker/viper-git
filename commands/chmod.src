chmodFile = {}
chmodFile.name = "chmod"
chmodFile.args = "(-R) [PERMS] [PATH]"
chmodFile.desc = "Chmods a file or directory."
chmodFile.full_desc = "This command will chmod a file or directory where (-R) is recursion,\n where [PARMS] are the permissions of the file,\n where [PATH] is the path to the file or directory."
chmodFile.handler_types = ["start", "shell", "computer", "file"]
chmodFile.run = function(object, args)

    if not args or args.len < 2 then; self.show_help; return; end if
    if typeof(object) == "shell" then object = object.host_computer.File("/var")
    if typeof(object) == "computer" then object = object.File("/var")
    //command: chmod
    permissions = args[0]
    pathFile = args[1]
    isRecursive = 0

    if args.len == 3 then
        permissions = args[1]
        pathFile = args[2]
        isRecursive = 1
    end if
    if permissions.is_match("[0-7]{3}") then
        ugo = "ugo"
        file = findFile(object, pathFile)
        if file == null then; print("chmod: can't find " + pathFile); return; end if
        for i in range(len(permissions)-1)
            addPerm = ugo[i]+"+"
            rmPerm = ugo[i]+"-"

            if bitwise("&",permissions[i].val,4) then addPerm=addPerm+"r" else rmPerm=rmPerm+"r"
            if bitwise("&",permissions[i].val,2) then addPerm=addPerm+"w" else rmPerm=rmPerm+"w"
            if bitwise("&",permissions[i].val,1) then addPerm=addPerm+"x" else rmPerm=rmPerm+"x"

            if addPerm != ugo[i]+"+" then output = file.chmod(addPerm, isRecursive)
            if rmPerm != ugo[i]+"-" then output = file.chmod(rmPerm, isRecursive)
        end for
        if output then print(output)
    else
        file = findFile(object, pathFile)
        if file == null then; print("chmod: can't find " + pathFile); return; end if
        output = file.chmod(permissions, isRecursive)
        if output then print(output)
    end if
end function

chmodFile.show_help = function()
    show_help(self.name, self.args, self.full_desc, self.handler_types)
end function
