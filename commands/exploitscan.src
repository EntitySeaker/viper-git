exploitscan = {}
exploitscan.name = "exploitscan"
exploitscan.args = "[LIB/IP] [PORT] (PASS/LANIP)"
exploitscan.desc = "This command will scan a library or IP for exploits."
exploitscan.full_desc = "This command will scan a library or IP for exploits,\n where [LIB/IP] is a library or IP,\n where [PORT] is the port of a service to attack (this can be skipped when attacking a local library),\n where (PASS/LANIP) is a password to inject a new password,\n or local IP of any computer on the network for a bounce attack.\n it is possible to add a variable called ""lib"" with a library index, which will be used to scan from."
exploitscan.handler_types = ["start", "shell", "computer", "file"]
exploitscan.run = function(object, args)

    exploit_scan(main_session.handlerType, args)

end function

exploitscan.show_help = function()
    show_help(self.name, self.args, self.full_desc, self.handler_types)
end function